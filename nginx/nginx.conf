# Define rate limiting zone to 10 requests per second per ip
limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s;

server {

    server_name peerprep.marcussoh.com;

    location /api/user-service/user-service/ {
        limit_req zone=req_limit_per_ip burst=20 nodelay;
        limit_req_status 429;

        proxy_pass "http://localhost:8001/api/user-service/" ;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }


    location /api/matching-service/ {
        limit_req zone=req_limit_per_ip burst=20 nodelay;
        limit_req_status 429;

        proxy_pass "http://localhost:8002/api/matching-service/" ;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # Additional headers for WebSocket
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
     }

 location /api/question-service/question-service/ {
        limit_req zone=req_limit_per_ip burst=20 nodelay;
        limit_req_status 429;

        proxy_pass "http://localhost:8003/api/question-service/" ;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }


    location /api/collab-service/collaboration-service/ {
        limit_req zone=req_limit_per_ip burst=20 nodelay;
        limit_req_status 429;

        proxy_pass "http://localhost:8004/api/collaboration-service/" ;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # Additional headers for WebSocket
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Set timeouts
        proxy_read_timeout 60s;       # Time to wait for data from backend
        proxy_send_timeout 60s;       # Time to wait for data to be sent to backend
        proxy_connect_timeout 10s;    # Time to establish a connection
        proxy_buffering off;          # Disable buffering for real-time connection
        proxy_ignore_client_abort on;
    }


    location /api/collab-service/websocket/ {
        limit_req zone=req_limit_per_ip burst=20 nodelay;
        limit_req_status 429;

        proxy_pass "http://localhost:8004/" ;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # Additional headers for WebSocket
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

 location /api/communication-service/ {
        limit_req zone=req_limit_per_ip burst=20 nodelay;
        limit_req_status 429;

        proxy_pass "http://localhost:8005/api/communication-service/" ;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }


    location /api/history-service/history-service/ {
        limit_req zone=req_limit_per_ip burst=20 nodelay;
        limit_req_status 429;

        proxy_pass "http://localhost:8006/api/history-service/" ;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }


    location /api/run-service/run-service/ {
        limit_req zone=req_limit_per_ip burst=20 nodelay;
        limit_req_status 429;

        proxy_pass "http://localhost:8007/api/run-service/" ;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /api/ai-chat-service/ai-chat-service/ {
        limit_req zone=req_limit_per_ip burst=20 nodelay;
        limit_req_status 429;

        proxy_pass "http://localhost:8008/api/ai-chat-service/" ;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }


    root /var/www/peerprep.marcussoh.com;

    index index.html index.htm index.php;

    location / {
        try_files $uri $uri/ /index.html;
    }


    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
    }

    location ~ /\.ht {
        deny all;
    }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/peerprep.marcussoh.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/peerprep.marcussoh.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {

    if ($host = peerprep.marcussoh.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name peerprep.marcussoh.com;
    listen 80;
    return 404; # managed by Certbot

}
        